  框架说明
前置：
  ngingx 重写 url 
       1 .js/.css 文件到view文件夹(html文件引入的根目录为该文件夹）
       2 .jpg 文件到sources文件夹
       3 其他请求将转换为(q=参数) 域名：模块/控制器/函数
        
流程 
   1 index 加载相应文件->定义宏->创建app实例
   2 app实例::run()->加载扩展组件->实例log->分发请求
   ojk
                      |  
                      |-> 自定义组件 
                             1 controller（处理页面输出，参数获取，调度）
                             1 db        (数据库封装）

运行级别 
   DEBUG       直接输出
   RELEASE     写入文件

控制器 模型 数据接口
Controller 提供GetPare函数 用以获取前台参数

动态更改数据库：tools 中提供工改数据库操作（默认设置在配置中）




(1)：URL路由
kk.cn/test/test/test
域名：模块/控制器/函数
1
根据模块名和控制名加载相应文件
example:
mvc/crt/test/test.php  （文件）
2
根据控制名实例化对象
prefix_模块名_控制器名 
(前缀在inc文件中可设定)
example:
class  App_Ctr_Test_Test
2
根据函数名调用
   testAction
example:
   public function testAction(){
     ... ... 
  } 
默认模块，控制器，方法 均为 index 
(inc 文件中设定)
(2)URL 参数
set: kk.cn/test/test/test?parameter=123456;
get: $_REQUEST['parameter'];
rewrite:
css js 文件重定位到 /mvc/view 文件下  引用时以此为根目录
资源文件重定位到 /sources文件下        引用时以此为根目录
公共图片上传接口 /Public/Upload/UploadImg  字段：'img' 返回资源路径